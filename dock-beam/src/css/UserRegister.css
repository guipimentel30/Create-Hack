/**
 * UserRegister.css
 *
 * This stylesheet provides the styling for the user registration page.
 * It includes styles for the main layout, form elements, complex components like
 * an availability table and user type selection cards, and responsive adjustments.
 */

/* ==========================================================================
   1. ROOT VARIABLES & GLOBAL STYLES
   ========================================================================== */

/*
 * Defines the color palette and global font settings for the page.
 * Using CSS variables makes it easy to maintain a consistent theme.
 */
:root {
  /* Primary Colors */
  --primary-blue: #3b82f6;
  --primary-purple: #8b5cf6;
  --primary-maroon: #5c0438; /* Guessed from context */
  --primary-gradient: linear-gradient(135deg, var(--primary-blue) 0%, var(--primary-purple) 100%);

  /* Text Colors */
  --text-dark: #1a202c;
  --text-medium: #374151;
  --text-light: #64748b;

  /* Border & Background Colors */
  --border-color: #e5e7eb;
  --background-light: #f8fafc;
  --background-white: #fff;

  /* Feedback Colors */
  --success-bg: #dcfce7;
  --success-text: #166534;
  --success-border: #bbf7d0;
  --error-bg: #fef2f2;
  --error-text: #dc2626;
  --error-border: #fecaca;
}

/* Base styles for the entire registration page */
.user-register-page {
  font-family: 'Inter', 'Poppins', sans-serif;
  min-height: 100vh;
  padding-top: 72px; /* A Tcount for a fixed navbar height */
}


/* ==========================================================================
   2. HERO SECTION
   ========================================================================== */

/*
 * The full-screen background section that sits behind the registration form.
 */
.register-hero {
  position: relative;
  min-height: calc(100vh - 72px);
  background: url('https://images.unsplash.com/photo-1521737604893-d14cc237f11d?auto=format&fit=crop&w=1600&q=80') center/cover no-repeat;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 2rem 1rem;
}

/* A gradient overlay to improve text readability over the background image */
.register-hero__overlay {
  position: absolute;
  inset: 0; /* A shorthand for top: 0; right: 0; bottom: 0; left: 0; */
  background: linear-gradient(135deg, rgba(58, 90, 154, 0.8) 0%, rgba(92, 4, 56, 0.7) 100%);
  z-index: 1;
}

/* The content container within the hero, ensuring it stays centered */
.register-hero__content {
  position: relative;
  z-index: 2;
  width: 100%;
  max-width: 800px; /* Wider than login to accommodate more form fields */
  margin: 0 auto;
}


/* ==========================================================================
   3. REGISTRATION CONTAINER & HEADER
   ========================================================================== */

/* The main "card" or container for the registration form */
.register-container {
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(10px); /* Creates a frosted glass effect */
  border-radius: 20px;
  padding: 3rem 2.5rem;
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

/* Header section within the registration container */
.register-header {
  text-align: center;
  margin-bottom: 2.5rem;
}

.register-header__title {
  font-size: 2.5rem;
  font-weight: 800;
  color: var(--text-dark);
  margin-bottom: 0.5rem;
  line-height: 1.2;
  letter-spacing: -0.02em;
}

.register-header__subtitle {
  font-size: 1.1rem;
  color: var(--text-light);
  font-weight: 400;
  line-height: 1.5;
  margin: 0;
}


/* ==========================================================================
   4. FORM STYLES
   ========================================================================== */

/* --- General Form & Field Grouping --- */

.register-form {
  margin-bottom: 2rem;
}

/* A container for a label and its corresponding input */
.form-group {
  margin-bottom: 1.5rem;
}

/* Styling for form field labels */
.form-label {
  display: block;
  font-size: 0.95rem;
  font-weight: 600;
  color: var(--text-medium);
  margin-bottom: 0.5rem;
}

/* Wrapper for an input and its associated icon */
.form-input-wrapper {
  position: relative;
  display: flex;
  align-items: center;
}


/* --- Text Inputs, Textareas, and Icons --- */

/* Base style for all text-based inputs */
.form-input {
  width: 100%;
  padding: 1rem;
  padding-left: 2.75rem; /* Make space on the left for an icon */
  border: 2px solid var(--border-color);
  border-radius: 12px;
  font-size: 1rem;
  font-weight: 400;
  background: var(--background-white);
  transition: all 0.2s ease;
  outline: none;
}

/* Styles for the icon inside the input wrapper */
.form-input-icon {
  position: absolute;
  left: 1rem;
  top: 50%;
  transform: translateY(-50%);
  color: #9ca3af;
  pointer-events: none; /* Allows clicks to pass through to the input */
  transition: opacity 0.2s ease-in-out;
}

/* * Icon Hiding Logic:
 * The :has() pseudo-class selects the wrapper if it contains an input
 * that is NOT showing its placeholder (i.e., the user has started typing).
 * This makes the icon fade out.
 */
.form-input-wrapper:has(.form-input:not(:placeholder-shown)) .form-input-icon {
  opacity: 0;
}

/* Smoothly fades out the placeholder text on focus */
.form-input::placeholder {
  transition: color 0.2s ease-in-out;
}

.form-input:focus::placeholder {
  color: transparent;
}

/* Focus state for a valid input */
.form-input:focus {
  border-color: var(--primary-blue);
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

/* Styles for an input with a validation error */
.form-input--error {
  border-color: var(--error-text);
}

.form-input--error:focus {
  border-color: var(--error-text);
  box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
}

/* Specific styles for textarea elements */
.form-textarea {
  min-height: 120px;
  resize: vertical;
  font-family: inherit; /* Ensures textarea uses the page's font */
}

/* Compact select dropdown styles */
.form-select-compact {
  padding: 1rem;
  appearance: none;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
  background-position: right 0.75rem center;
  background-repeat: no-repeat;
  background-size: 1.5em 1.5em;
  padding-right: 2.5rem;
}

.form-select-compact:focus {
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%233b82f6' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
}

/* Compact dropdown options */
select.form-input option {
  padding: 0.4rem 0.5rem;
  font-size: 0.85rem;
  line-height: 1.1;
  max-height: 35px;
}

/* File input styles */
.form-file-input {
  padding: 0.75rem;
  background: var(--background-light);
  border: 2px dashed #cbd5e1;
  border-radius: 12px;
  cursor: pointer;
  transition: all 0.2s ease;
}

.form-file-input:hover {
  border-color: #94a3b8;
  background: #f1f5f9;
}

.form-file-input:focus {
  border-color: var(--primary-blue);
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}


/* --- Checkboxes & Radio Buttons --- */

.form-checkbox-group {
  display: flex;
  flex-direction: column;
  gap: 0.75rem;
}

.form-checkbox-item {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding: 0.75rem;
  border: 2px solid var(--border-color);
  border-radius: 12px;
  cursor: pointer;
  transition: all 0.2s ease;
  background: var(--background-white);
}

.form-checkbox-item:hover {
  border-color: #cbd5e1;
  background: var(--background-light);
}

/* Style for the selected/checked state */
.form-checkbox-item.checked {
  border-color: var(--primary-blue);
  background: rgba(59, 130, 246, 0.05);
}

.checkbox-input {
  width: 1.2rem;
  height: 1.2rem;
  accent-color: var(--primary-blue);
  cursor: pointer;
}

.checkbox-label {
  font-size: 0.95rem;
  color: var(--text-medium);
  font-weight: 500;
  cursor: pointer;
  flex: 1;
}

/* Styles for a conditional input that appears when an "Other" option is checked */
.form-checkbox-group .form-group {
  margin-top: 12px;
  margin-left: 24px;
  animation: slideDown 0.3s ease-out;
}


/* --- Dropdowns --- */

.dropdown-container {
  position: relative;
  width: 100%;
}

.dropdown-toggle {
  width: 100%;
  padding: 12px 16px;
  border: 2px solid var(--border-color);
  border-radius: 8px;
  background: white;
  color: var(--text-dark);
  font-size: 16px;
  text-align: left;
  cursor: pointer;
  display: flex;
  justify-content: space-between;
  align-items: center;
  transition: all 0.3s ease;
}

.dropdown-toggle:hover,
.dropdown-toggle:focus {
  outline: none;
  border-color: var(--primary-maroon);
}

.dropdown-toggle:focus {
  box-shadow: 0 0 0 3px rgba(92, 4, 56, 0.1);
}

.dropdown-arrow {
  transition: transform 0.3s ease;
  color: var(--primary-maroon);
  font-size: 12px;
}

.dropdown-arrow.open {
  transform: rotate(180deg);
}

.dropdown-menu {
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  background: white;
  border: 2px solid var(--border-color);
  border-top: none;
  border-radius: 0 0 8px 8px;
  max-height: 200px;
  overflow-y: auto;
  z-index: 1000;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.dropdown-item {
  display: flex;
  align-items: center;
  padding: 8px 16px;
  cursor: pointer;
  transition: background-color 0.2s ease;
  border-bottom: 1px solid var(--border-color);
}

.dropdown-item:last-child {
  border-bottom: none;
}

.dropdown-item:hover {
  background-color: #f8f9fa;
}


/* --- Fieldsets --- */

/* Used to group related form controls */
.form-fieldset {
  border: 2px solid var(--border-color);
  border-radius: 12px;
  padding: 1.5rem;
  margin-bottom: 1.5rem;
  background: var(--background-white);
}

.form-legend {
  font-size: 1rem;
  font-weight: 600;
  color: var(--text-medium);
  padding: 0 0.5rem;
  background: var(--background-white);
}


/* --- Buttons --- */

/* Button for social login options (e.g., Google) */
.social-btn {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.75rem;
  width: 100%;
  padding: 1rem 2rem;
  border: 2px solid var(--border-color);
  border-radius: 12px;
  background: var(--background-white);
  color: var(--text-medium);
  font-size: 1rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  margin-bottom: 2rem;
}

/* Example hover state for a Google button */
.social-btn:hover {
  border-color: #ea4335;
  color: #ea4335;
  background: #fef2f2;
  transform: translateY(-1px);
  box-shadow: 0 4px 12px rgba(234, 67, 53, 0.2);
}

/* The main form submission button */
.register-submit {
  width: 100%;
  padding: 1rem 2rem;
  font-size: 1.1rem;
  font-weight: 600;
  border: none;
  border-radius: 12px;
  background: var(--primary-gradient);
  color: #fff;
  cursor: pointer;
  transition: all 0.2s ease;
  position: relative;
  overflow: hidden;
  box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
}

.register-submit:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: 0 8px 20px rgba(59, 130, 246, 0.4);
}

.register-submit:active {
  transform: translateY(0);
}

.register-submit:disabled {
  opacity: 0.7;
  cursor: not-allowed;
  transform: none;
}

/* Container for text and spinner when button is in loading state */
.loading-content {
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
}

/* A simple spinning loader */
.spinner {
  width: 1.2rem;
  height: 1.2rem;
  border: 2px solid transparent;
  border-top: 2px solid currentColor;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}


/* --- Success/Error Messages --- */

.form-message {
  padding: 1rem 1.5rem;
  border-radius: 12px;
  margin-bottom: 1.5rem;
  font-weight: 500;
  display: flex;
  align-items: center;
  gap: 0.75rem;
}

.form-message--success {
  background: var(--success-bg);
  color: var(--success-text);
  border: 2px solid var(--success-border);
}

.form-message--error {
  background: var(--error-bg);
  color: var(--error-text);
  border: 2px solid var(--error-border);
}


/* ==========================================================================
   5. COMPLEX COMPONENTS
   ========================================================================== */

/* --- Availability Table --- */

.availability-section {
  margin-top: 2rem;
  padding: 2rem;
  background: rgba(248, 250, 252, 0.8);
  border-radius: 16px;
  border: 2px solid #e2e8f0;
}

.availability-title {
  font-size: 1.5rem;
  font-weight: 700;
  color: var(--text-dark);
  margin-bottom: 1.5rem;
  text-align: center;
}

.availability-table {
  width: 100%;
  border-collapse: separate;
  border-spacing: 0;
  border-radius: 12px;
  overflow: hidden; /* Ensures border-radius is respected on child elements */
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
  background: var(--background-white);
}

.availability-table th {
  background: var(--primary-gradient);
  color: #fff;
  padding: 1rem 0.75rem;
  font-weight: 600;
  font-size: 0.95rem;
  text-align: center;
  border: none;
}

.availability-table th:first-child {
  text-align: left;
  padding-left: 1.5rem;
}

.availability-table td {
  padding: 1rem 0.75rem;
  border-bottom: 1px solid var(--border-color);
  text-align: center;
  background: var(--background-white);
  transition: background-color 0.2s ease;
}

.availability-table td:first-child {
  font-weight: 600;
  color: var(--text-medium);
  text-align: left;
  padding-left: 1.5rem;
  background: var(--background-light);
}

/* Apply hover effect to all cells in the row */
.availability-table tr:hover td {
  background: #f1f5f9;
}

.availability-table tr:hover td:first-child {
  background: #e2e8f0;
}

.availability-table tr:last-child td {
  border-bottom: none;
}

.availability-checkbox {
  width: 1.25rem;
  height: 1.25rem;
  accent-color: var(--primary-blue);
  cursor: pointer;
  transition: transform 0.2s ease;
}

.availability-checkbox:hover {
  transform: scale(1.1);
}


/* --- User Type Selection Cards --- */

.user-type-cards {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 2rem;
  margin-top: 2rem;
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto;
}

.user-type-card {
  background: #fff;
  border-radius: 12px;
  box-shadow: 0 4px 24px rgba(53, 57, 170, 0.1);
  padding: 2.5rem 2rem;
  text-align: center;
  cursor: pointer;
  border: 1px solid rgba(53, 57, 170, 0.05);
  display: flex;
  flex-direction: column;
  align-items: center;

  /* Initial state for animation: hidden and moved down */
  opacity: 0;
  transform: translateY(60px) scale(0.9);
  transition: opacity 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94),
              transform 0.8s cubic-bezier(0.25, 0.46, 0.45, 0.94),
              box-shadow 0.3s ease;
}

/* Animated state: visible and in position (triggered by adding the class) */
.user-type-card.animate-in {
  opacity: 1;
  transform: translateY(0) scale(1);
}

.user-type-card:hover {
  box-shadow: 0 8px 32px rgba(53, 57, 170, 0.15);
}

/* Apply upward shift on hover only after the initial animation is complete */
.user-type-card.animate-in:hover {
  transform: translateY(-5px);
}

.card-icon {
  font-size: 3.5rem;
  margin-bottom: 1.5rem;
  display: block;
  filter: drop-shadow(0 2px 8px rgba(92, 4, 56, 0.1));
}

.card-title {
  color: var(--primary-purple);
  font-size: 1.4rem;
  font-weight: 600;
  margin-bottom: 1rem;
}

.card-description {
  color: var(--primary-maroon);
  font-size: 1rem;
  line-height: 1.6;
  margin-bottom: 2rem;
  font-weight: 400;
  flex-grow: 1; /* Allows description to fill space, aligning buttons */
}

.card-button {
  background: linear-gradient(135deg, var(--primary-purple), var(--primary-maroon));
  color: white;
  border: none;
  padding: 0.8rem 1.5rem;
  border-radius: 8px;
  font-weight: 600;
  font-size: 1rem;
  cursor: pointer;
  transition: all 0.3s ease;
  width: 100%;
  max-width: 250px;
  box-shadow: 0 4px 12px rgba(53, 57, 170, 0.2);
}

.card-button:hover {
  background: var(--secondary-red);
  transform: translateY(-2px);
  box-shadow: 0 6px 20px rgba(53, 57, 170, 0.3);
}


/* ==========================================================================
   6. ANIMATIONS
   ========================================================================== */

/* Keyframe animation for the spinning loader */
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* Keyframe animation for conditionally revealed inputs */
@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-10px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}


/* ==========================================================================
   7. UTILITY & CUSTOM SCROLLBARS
   ========================================================================== */

/* --- Simple utility classes for reuse --- */

.text-center { text-align: center; }
.mb-4 { margin-bottom: 1rem; }
.mt-6 { margin-top: 1.5rem; }
.capitalize { text-transform: capitalize; }
.font-semibold { font-weight: 600; }
.font-bold { font-weight: 700; }


/* --- Custom Scrollbars --- */

/* Custom scrollbar for multi-select dropdown menu */
.dropdown-menu::-webkit-scrollbar {
  width: 6px;
}
.dropdown-menu::-webkit-scrollbar-track {
  background: #f1f1f1;
  border-radius: 3px;
}
.dropdown-menu::-webkit-scrollbar-thumb {
  background: var(--primary-maroon);
  border-radius: 3px;
}
.dropdown-menu::-webkit-scrollbar-thumb:hover {
  background: #8B4513; /* A slightly darker maroon */
}

/* Modal Styles */
.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
}

.modal-content {
  background: white;
  padding: 2rem;
  border-radius: 8px;
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
  max-width: 500px;
  width: 90%;
  max-height: 90vh;
  overflow-y: auto;
}

.modal-content h3 {
  margin: 0 0 1rem 0;
  color: #333;
  font-size: 1.25rem;
}

.modal-content p {
  margin: 0.5rem 0;
  color: #666;
  line-height: 1.5;
}

.modal-content small {
  color: #999;
  font-style: italic;
}

/* Responsive Design */
/* Custom scrollbar for textareas */
.form-textarea::-webkit-scrollbar {
  width: 6px;
}
.form-textarea::-webkit-scrollbar-track {
  background: #f1f5f9;
  border-radius: 3px;
}
.form-textarea::-webkit-scrollbar-thumb {
  background: #cbd5e1;
  border-radius: 3px;
}
.form-textarea::-webkit-scrollbar-thumb:hover {
  background: #94a3b8;
}


/* ==========================================================================
   8. RESPONSIVE DESIGN
   ========================================================================== */

/*
 * Adjustments for tablet-sized screens and smaller.
 */
@media (max-width: 768px) {
  .register-hero {
    padding: 1rem;
  }
  .register-container {
    padding: 2rem 1.5rem;
  }
  .register-header__title {
    font-size: 2rem;
  }
  .register-header__subtitle {
    font-size: 1rem;
  }
  .form-checkbox-group {
    gap: 0.5rem;
  }
  .form-checkbox-item {
    padding: 0.5rem;
  }
  .availability-table th,
  .availability-table td {
    padding: 0.75rem 0.5rem;
    font-size: 0.875rem;
  }
  .availability-table th:first-child,
  .availability-table td:first-child {
    padding-left: 1rem;
  }
}

/*
 * Adjustments for mobile-sized screens.
 */
@media (max-width: 480px) {
  .register-container {
    padding: 1.5rem 1rem;
    border-radius: 16px;
  }
  .register-header__title {
    font-size: 1.75rem;
  }
  .form-input {
    padding: 0.875rem;
    /* Adjust icon padding for smaller inputs if needed */
    padding-left: 2.5rem; 
  }
  .availability-section {
    padding: 1.5rem 1rem;
  }
  .availability-table {
    font-size: 0.8rem;
  }
  .availability-table th,
  .availability-table td {
    padding: 0.5rem 0.25rem;
  }
  .availability-table th:first-child,
  .availability-table td:first-child {
    padding-left: 0.5rem;
  }
  .availability-checkbox {
    width: 1rem;
    height: 1rem;
  }
}

/* Estilo para a borda do input quando há um erro */
.form-input--error {
  border-color: #e53e3e; /* Vermelho para indicar erro */
}

.form-input--error:focus {
  border-color: #e53e3e;
  box-shadow: 0 0 0 3px rgba(229, 62, 62, 0.2); /* Sombra de foco vermelha */
}

/* Estilo para a mensagem de erro abaixo do input */
.form-error-message {
  color: #e53e3e;
  font-size: 0.875rem; /* 14px */
  margin-top: 0.5rem; /* 8px */
  text-align: left;
}

/* Adicione este código ao final do seu arquivo UserRegister.css */

/* Estilo para a borda do input quando há um erro */
.form-input--error {
  border-color: #e53e3e; /* Tom de vermelho para erro */
}

.form-input--error:focus {
  border-color: #e53e3e;
  box-shadow: 0 0 0 3px rgba(229, 62, 62, 0.2); /* Sombra de foco vermelha */
}

/* Estilo para a mensagem de erro que aparece abaixo do input */
.form-error-message {
  color: #c53030; /* Tom de vermelho mais escuro para o texto */
  font-size: 0.875rem; /* 14px */
  margin-top: 0.5rem; /* 8px de espaço acima */
  text-align: left;
  width: 100%;
}